{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gerlad\\\\Desktop\\\\React-Projects\\\\compund-calculator\\\\src\\\\CompoundInterestChart.jsx\";\nimport * as React from \"react\";\nimport { Label, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport Summary from \"./Summary.jsx\";\n\nfunction renderTooltip(_ref) {\n  var payload = _ref.payload;\n\n  if (!payload[0]) {\n    return;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, \"\\xA3\".concat(payload[0].value.toFixed(2)));\n}\n\nfunction CompoundInterestChart(_ref2) {\n  var initialAmount = _ref2.initialAmount,\n      period = _ref2.period,\n      growthRate = _ref2.growthRate,\n      monthlyContribution = _ref2.monthlyContribution;\n  var data = React.useMemo(function () {\n    var result = [];\n\n    for (var i = 1; i <= period; i++) {\n      var lastFutureValue = initialAmount + monthlyContribution * 12;\n\n      if (result.length > 0) {\n        lastFutureValue = result[result.length - 1].value + monthlyContribution * 12;\n      }\n\n      result.push({\n        label: \"\".concat(i),\n        value: lastFutureValue * Math.pow(1 + growthRate / 100, 1)\n      });\n    }\n\n    return result;\n  }, [initialAmount, period, growthRate, monthlyContribution]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Projected Growth\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"90%\",\n      height: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 500,\n    height: 300,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 0,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    value: \"Years\",\n    offset: -3,\n    position: \"insideBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    content: renderTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Summary, {\n    period: period,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CompoundInterestChart;","map":{"version":3,"sources":["C:/Users/Gerlad/Desktop/React-Projects/compund-calculator/src/CompoundInterestChart.jsx"],"names":["React","Label","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Summary","renderTooltip","payload","value","toFixed","CompoundInterestChart","initialAmount","period","growthRate","monthlyContribution","data","useMemo","result","i","lastFutureValue","length","push","label","Math","pow","width","height","top","right","left","bottom"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Label,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\n\nimport Summary from \"./Summary.jsx\";\n\nfunction renderTooltip({ payload }) {\n  if (!payload[0]) {\n    return;\n  }\n\n  return <span>{`Â£${payload[0].value.toFixed(2)}`}</span>;\n}\n\nfunction CompoundInterestChart({ initialAmount, period, growthRate, monthlyContribution }) {\n  const data = React.useMemo(\n    () => {\n      const result = [];\n\n      for (let i = 1; i <= period; i++) {\n        let lastFutureValue = initialAmount + monthlyContribution * 12;\n        if (result.length > 0) {\n          lastFutureValue = result[result.length - 1].value + monthlyContribution * 12;\n        }\n        result.push({\n          label: `${i}`,\n          value: lastFutureValue * Math.pow(1 + growthRate / 100, 1)\n        });\n      }\n\n      return result;\n    },\n    [initialAmount, period, growthRate, monthlyContribution]\n  );\n\n  return (\n    <>\n      <h2>Projected Growth</h2>\n      <div style={{ width: \"90%\", height: 300 }}>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 0,\n              bottom: 5\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"label\">\n              <Label value=\"Years\" offset={-3} position=\"insideBottom\" />\n            </XAxis>\n            <YAxis />\n            <Tooltip content={renderTooltip} />\n            <Line type=\"monotone\" dataKey=\"value\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n      <hr />\n      <Summary period={period} data={data} />\n    </>\n  );\n}\n\nexport default CompoundInterestChart;\n"]},"metadata":{},"sourceType":"module"}