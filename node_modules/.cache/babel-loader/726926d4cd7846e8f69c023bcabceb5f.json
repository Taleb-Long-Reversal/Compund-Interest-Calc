{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gerlad\\\\Desktop\\\\React-Projects\\\\compund-calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Gerlad\\\\Desktop\\\\React-Projects\\\\compund-calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gerlad\\\\Desktop\\\\React-Projects\\\\compund-calculator\\\\src\\\\VariablesForm.jsx\";\nimport * as React from \"react\";\nimport defaultState from \"./defaultState\";\n\nfunction VariablesForm(_ref) {\n  var onUpdate = _ref.onUpdate;\n\n  var _React$useState = React.useState(defaultState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var initialAmount = state.initialAmount,\n      period = state.period,\n      growthRate = state.growthRate,\n      monthlyContribution = state.monthlyContribution;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Financials\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"initialAmount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Initial Amount ($)\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"initialAmount\",\n    name: \"initialAmount\",\n    value: initialAmount,\n    onChange: function onChange(_ref2) {\n      var target = _ref2.target;\n      return setState(_objectSpread({}, state, {\n        initialAmount: Number(target.value)\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Investment Period (Years)\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"period\",\n    name: \"period\",\n    value: period,\n    onChange: function onChange(_ref3) {\n      var target = _ref3.target;\n      return setState(_objectSpread({}, state, {\n        period: Number(target.value)\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"growthRate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Annual Growth Rate (%)\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"growthRate\",\n    name: \"growthRate\",\n    value: growthRate,\n    onChange: function onChange(_ref4) {\n      var target = _ref4.target;\n      return setState(_objectSpread({}, state, {\n        growthRate: Number(target.value)\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"monthlyContribution\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Monthly Contribution (\\xA3)\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"monthlyContribution\",\n    name: \"monthlyContribution\",\n    value: monthlyContribution,\n    onChange: function onChange(_ref5) {\n      var target = _ref5.target;\n      return setState(_objectSpread({}, state, {\n        monthlyContribution: Number(target.value)\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return onUpdate(state);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Update Chart\"));\n}\n\nexport default VariablesForm;","map":{"version":3,"sources":["C:/Users/Gerlad/Desktop/React-Projects/compund-calculator/src/VariablesForm.jsx"],"names":["React","defaultState","VariablesForm","onUpdate","useState","state","setState","initialAmount","period","growthRate","monthlyContribution","target","Number","value"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport defaultState from \"./defaultState\";\n\nfunction VariablesForm({ onUpdate }) {\n  const [state, setState] = React.useState(defaultState);\n\n  const { initialAmount, period, growthRate, monthlyContribution } = state;\n\n  return (\n    <section>\n      <h2>Financials</h2>\n      <div className=\"flex\">\n        <label htmlFor=\"initialAmount\">\n          Initial Amount ($)\n          <input\n            type=\"number\"\n            id=\"initialAmount\"\n            name=\"initialAmount\"\n            value={initialAmount}\n            onChange={({ target }) => setState({ ...state, initialAmount: Number(target.value) })}\n          />\n        </label>\n        <label htmlFor=\"period\">\n          Investment Period (Years)\n          <input\n            type=\"number\"\n            id=\"period\"\n            name=\"period\"\n            value={period}\n            onChange={({ target }) => setState({ ...state, period: Number(target.value) })}\n          />\n        </label>\n        <label htmlFor=\"growthRate\">\n          Annual Growth Rate (%)\n          <input\n            type=\"number\"\n            id=\"growthRate\"\n            name=\"growthRate\"\n            value={growthRate}\n            onChange={({ target }) => setState({ ...state, growthRate: Number(target.value) })}\n          />\n        </label>\n        <label htmlFor=\"monthlyContribution\">\n          Monthly Contribution (Â£)\n          <input\n            type=\"number\"\n            id=\"monthlyContribution\"\n            name=\"monthlyContribution\"\n            value={monthlyContribution}\n            onChange={({ target }) =>\n              setState({ ...state, monthlyContribution: Number(target.value) })\n            }\n          />\n        </label>\n      </div>\n      <button type=\"button\" onClick={() => onUpdate(state)}>\n        Update Chart\n      </button>\n    </section>\n  );\n}\n\nexport default VariablesForm;\n"]},"metadata":{},"sourceType":"module"}